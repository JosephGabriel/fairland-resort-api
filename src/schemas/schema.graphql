scalar Latitude
scalar PostalCode
scalar Longitude
scalar Password
scalar EmailAddress
scalar DateTime

# scalar Upload

# type FileUpload {
#   file: Upload!
# }

# type ImageUrl {
#   url: String!
# }

# union Media = FileUpload | ImageUrl

type Query {
  ########## Hotel ################
  "Usada para buscar um hotel pelo id"
  hotel(id: ID!, roomOptions: Options): Hotel!

  "Usada para buscar hotéis"
  hotels(roomOptions: Options): [Hotel!]!

  "Usada para buscar um hotel pelo id do admin"
  hotelsByAdmin: [Hotel!]!

  "Usada para buscar um hotel pelo slug"
  hotelBySlug(slug: String!): Hotel!

  ########## Room ################
  "Usada para buscar um quarto pelo id"
  room(id: ID!): Room!

  "Usada para buscar um quartos"
  rooms(filter: RoomFilter): [Room!]!

  "Usada para buscar quartos pelo id do hotel"
  roomsByHotel(hotel: ID!, options: Options): [Room!]!

  ########## Reservas ################
  "Usada para buscar uma reserva pelo id"
  booking(id: ID!): Booking!

  "Usada para buscar reservas de um usuário"
  bookings: [Booking!]!
}

type Mutation {
  ########## Usuário ################
  "Usada para fazer login"
  loginUser(data: LoginUserInput!): AuthPayload!

  "Usada para criar um usuário"
  createUser(data: CreateUserInput!): AuthPayload!

  "Usada para criar um admin"
  createAdmin(data: CreateUserInput!): AuthPayload!

  "Usada para atualizar informações não sensiveis (ex: senhas)"
  updateUser(data: UpdateUserInput!): AuthPayload!

  "Usada para alterar a senha do usuário"
  updateUserPassword(data: UpdateUserPasswordInput!): AuthPayload!

  "Usada para que o próprio usuário possa desativar a conta, mas não apagá-la"
  deactivateUser: String!

  "Usada para verificar um usuário"
  verifyUser: AuthPayload!

  ########## Hotel ################
  "Usada para criar um hotel"
  createHotel(data: CreateHotelInput!): Hotel!

  "Usada para atualizar um hotel"
  updateHotel(id: ID!, data: UpdateHotelInput!): Hotel!

  "Usada para apagar um hotel"
  deleteHotel(id: ID!): String!

  ########## Quartos ################
  "Usada para criar um quarto de hotel"
  createRoom(data: CreateRoomInput!): Room!

  "Usada para atualizar um quarto de hotel"
  updateRoom(id: ID!, data: UpdateRoomInput!): Room!

  "Usada para deletar um quarto de hotel"
  deleteRoom(id: ID!): String!

  ########## Reservas ################
  "Usada para fazer uma reserva"
  createBooking(data: CreateBookingInput!): Booking!

  "Usada para cancelar uma reserva"
  deleteBooking(id: ID!): String!
}

input Options {
  skip: Int
  take: Int
  orderBy: OrderBy
}

enum OrderBy {
  asc
  desc
}
