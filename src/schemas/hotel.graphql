type Hotel {
  "Id do hotel"
  id: ID!

  "Nome do hotel"
  name: String!

  "Classificação do hotel ex: 5 estrelas"
  rating: Int!

  "Uma pequena descrição do hotel de 10 as 30 palavras"
  summary: String!

  "A descrição do hotel"
  description: String!

  "Thumbnail a ser exibida do hotel"
  thumbnail: String!

  "Um array de url's de imagens de hoteis"
  images: [String!]!

  #commodities: [String!]

  #mainCommodities: [String!]

  #forFamilycommodities: [String!]

  #activityCommodities: [String!]

  "Url da logo do hotel"
  logo: String!

  "Slug do hotel baseado no nome"
  slug: String!

  "Latitude do hotel"
  latitude: Latitude!

  "Longitude do hotel"
  longitude: Longitude!

  "Rua do hotel"
  address: String!

  "Número residencial do hotel"
  addressNumber: String!

  "Cep do hotel"
  zipCode: PostalCode!

  "Bairro do hotel"
  neighborhood: String!

  "Estado do hotel"
  state: String!

  "Cidade do hotel"
  city: String!

  "Array com os quartos do hotel"
  rooms: [Room!]!

  "Data de criação do hotel"
  createdAt: DateTime

  "Data da ultima atualização do hotel"
  updatedAt: DateTime
}

type HotelsPayload implements QueryPayload {
  "Quantidade total de hotéis criados"
  count: Int!

  "Array com hotéis"
  nodes: [Hotel!]!
}

input CreateHotelInput {
  name: String!
  summary: String!
  description: String!
  thumbnail: String!
  images: [String!]
  logo: String!
  latitude: Latitude!
  longitude: Longitude!
  address: String!
  addressNumber: String!
  zipCode: PostalCode!
  neighborhood: String!
  state: String!
  city: String!
}

input UpdateHotelInput {
  name: String
  summary: String
  description: String
  thumbnail: String
  images: [String]
  logo: String
  latitude: Latitude
  longitude: Longitude
  address: String
  addressNumber: String
  zipCode: PostalCode
  neighborhood: String
  state: String
  city: String
}
