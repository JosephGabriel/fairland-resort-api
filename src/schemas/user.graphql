type User {
  "Id único de cada usuário"
  id: ID!

  "Primeiro nome do usuário"
  firstName: String!

  "Sobrenome nome do usuário"
  lastName: String!

  "Nome de usuário único de cada usuário"
  userName: String!

  "Email único de cada usuário"
  email: EmailAddress!

  "Url da imagem de perfil de cada usuário"
  avatar: String

  "Senha criptografada de cada usuário"
  password: Password!

  "Timestamp do momento em que o usuário mudou a senha"
  passwordChangedAt: String

  "Enum do tipo de função (ADMIN | USER)"
  role: userRole!

  "Mostra se o usuário esta ativo ou não"
  active: Boolean!

  "Mostra se o usuário verificou o email ou não"
  verified: Boolean!

  "Reservas do usúario"
  bookings: [Booking!]

  "Review feitas pelo usuário"
  reviews: [Review!]
}

type AuthPayload {
  token: String!
  user: User!
}

input LoginUserInput {
  email: EmailAddress!
  password: Password!
}

input CreateUserInput {
  firstName: String!
  email: EmailAddress!
  lastName: String!
  userName: String!
  password: Password!
  passwordConfirm: Password!
  avatar: String
}

input UpdateUserInput {
  firstName: String
  email: EmailAddress
  lastName: String
  userName: String
  avatar: String
}

input UpdateUserPasswordInput {
  password: Password!
  passwordConfirm: Password!
}

enum userRole {
  ADMIN
  USER
}
